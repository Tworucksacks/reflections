
What happens when you initialize a repository? Why do you need to do it?

it creates a hidden directory .git for tracking changes to the directory.

***

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is an intermediary place where git holds all the changes that
are going to be added to the repository. This allows you to more easily decide
what you want to add.

***

How can you use the staging area to make sure you have one commit per logical
change?

git diff shows the difference between the working directory and the staging
area. git diff --staged will show the difference between the staging area and
the head commit. Using these you can make sure you have just the files you
need.

***

What are some situations where branches would be helpful in keeping your
history organized? How would branches help?

Branches allow you to test new ideas or feature separate from the main branch.
You can see if the changes work and then discard or introduce back into the
main branch with merging.

***

How do the diagrams help you visualize the branch structure?

The diagrams nicely shows which commits are on separate branches and which are
on all branches.

***

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Merging two branches brings the code together. Git will intelligently work out
what has changed (either added or deleted) and merge them.

***
