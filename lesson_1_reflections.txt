
How did viewing a diff between two versions of a file help you see the bug that
 was introduced?

Using the diff helped pinpoint what had changed between the versions. This
allows you to focus on where the bug could have been introduced.

***

How could having easier access to the entire history of a file make you a more
efficient programmer in the long term?

It would give you the ability to see how you were thinking and allow you to
see potentially better ways of approaching it in the future.

***

What do you think are the pros and cons of manually choosing when to commit,
like you do in Git, vs having versions automatically saved, like Google Docs
does?

The main con is that you can forget to save your changes. On the plus side you
 can choose a point that makes the most sense for saving and allows for better
 descriptions to be added with each commit.

 ***

 Why do you think some version control systems, like Git, allow saving multiple
  files in one commit, while others, like Google Docs, treat files separately?

Saving multiple files at one time makes more sense for developers where changes
can be interrelated and dependent on each other.

***

How can you use the commands git log and git diff to view the history of files?

You can use git log to see the different versions of the files and then use git
 diff v1 v2 to see the actual differences between those versions. You can just
use the first 4 chars of the version id for ease.

***

How might using version control make you more confident to make changes that
could break something?

Knowing you can revert back to a known good state would give you a lot more
confidence to experiment with new code.

***

Now that you have your workspace set up, what do you want to try using Git
for?

For keeping track of code changes and allowing to experiment with new code
with confidence.
